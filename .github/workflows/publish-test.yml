name: Publish to Test PyPI

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  setup-version:
    runs-on: ubuntu-latest
    steps:
      - name: Generate version number
        run: |
          VERSION_HASH=$(date +"%Y%m%d%H%M%S")
          echo "Generated version hash: $VERSION_HASH"
          echo $VERSION_HASH > version.txt

      - name: Upload version number as artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

  wheel:
    name: Build Wheel
    runs-on: ubuntu-20.04
    container:
      image: nvidia/cuda:12.1.1-cudnn8-devel-ubuntu20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        cuda-version: ['12.1']

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Download version value artifact
        uses: actions/download-artifact@v4
        with:
          name: version
          path: artifact

      - name: Free disk space
        run: |
          sudo rm -rf /usr/local/cuda-* /opt/cuda
          sudo rm -rf /usr/local/cuda
          bash -x .github/workflows/scripts/free-disk-space.sh

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          apt update && apt install --no-install-recommends -y python3-pip python3-dev
          python3 -m pip install --upgrade pip
          python3 -m pip install build

      - name: Build Wheel
        shell: bash
        run: |
          VERSION_HASH=$(cat artifact/version.txt)
          MOEINF_VERSION=0.0.1dev${VERSION_HASH} BUILD_OPS=1 python3 -m build --wheel
          wheel_name=$(ls dist/*whl | xargs -n 1 basename)
          asset_name=${wheel_name//"linux"/"manylinux1"}
          echo "wheel_name=${wheel_name}" >> $GITHUB_ENV
          echo "asset_name=${asset_name}" >> $GITHUB_ENV

      - name: Build Source
        if: ${{ matrix.python-version == '3.8' }}
        run: |
          VERSION_HASH=$(cat artifact/version.txt)
          MOEINF_VERSION=0.0.1dev${VERSION_HASH} python3 -m build --sdist

      - name: Rename Wheel
        run: |
          mv dist/${{ env.wheel_name }} dist/${{ env.asset_name }}

      - name: Publish Package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
